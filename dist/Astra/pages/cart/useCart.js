!function webpackUniversalModuleDefinition(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react"),require("react-router-dom")):"function"==typeof define&&define.amd?define("firestone",["react","react-router-dom"],t):"object"==typeof exports?exports.firestone=t(require("react"),require("react-router-dom")):e.firestone=t(e.react,e["react-router-dom"])}("undefined"!=typeof self?self:this,((e,t)=>(()=>{"use strict";var r={155:t=>{t.exports=e},442:e=>{e.exports=t}},o={};function __webpack_require__(e){var t=o[e];if(void 0!==t)return t.exports;var a=o[e]={exports:{}};return r[e](a,a.exports,__webpack_require__),a.exports}__webpack_require__.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return __webpack_require__.d(t,{a:t}),t},__webpack_require__.d=(e,t)=>{for(var r in t)__webpack_require__.o(t,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var a={};return(()=>{__webpack_require__.r(a),__webpack_require__.d(a,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var e=__webpack_require__(155),t=__webpack_require__(442);const __WEBPACK_DEFAULT_EXPORT__=r=>{let{fpi:o,useGlobalStore:a,useSnackbar:i,CART_DETAILS:_,CART_UPDATE:u,updateGraphQueryWithValue:c}=r,n=a(o.getters.CART);const s=a(o.getters.COUPONS);console.log(s);const p=(0,t.useNavigate)(),{showSnackbar:d}=i(),{buy_now_cart_items:l,cart_items:f,cart_items_count:b}=n||{},{breakup_values:m,loading:k,items:g,id:y}=f||{},{loading:q}=l||{},{loading:h}=b||{};(0,e.useEffect)((()=>{o.executeGraphQL(_).then((e=>console.log(e)))}),[]);return{cartItems:(0,e.useMemo)((()=>{if(g?.length>0){let e={};return g?.map((t=>{t?.key&&(e[t?.key]=t)})),e}return{}}),[g]),cartItemsWithActualIndex:g,breakUpValues:m,isLoading:!1,updateCartItems:function updateCartItems(e,t,r,a,i,n){e&&e.stopPropagation(),console.log("Cart",t,a,i,n,r);const s=[["$article_id",""+(t?.product?.uid+"_"+r)],["$item_id",`${t?.product?.uid}`],["$item_size",`${r}`],["$identifier",`${t?.identifiers?.identifier}`],["$item_index",`${i}`],["$quantity",`${(t?.quantity||0)+a}`],["$operation",`${n}`]];o.executeGraphQL(c(u,s),null).then((e=>{e?.updateCart?.success&&d(e?.updateCart?.message||"Cart is updated","success")})),setTimeout((()=>{o.executeGraphQL(_)}),4e3)},gotoCheckout:function gotoCheckout(){p({pathname:"/cart/checkout",search:`id=${b?.user_cart_items_count?.id}`})}}}})(),a})()));